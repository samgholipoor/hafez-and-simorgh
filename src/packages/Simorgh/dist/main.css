@import url(https://fonts.googleapis.com/css2?family=Lato:wght@300;400&display=swap);
*, ::before, ::after{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);
  --tw-ring-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow-colored: 0 0 rgba(0,0,0,0);
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop{
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);
  --tw-ring-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow-colored: 0 0 rgba(0,0,0,0);
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

#simorgh-root *,
#simorgh-root :host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

#simorgh-root hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

#simorgh-root abbr:where([title]) {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

#simorgh-root h1,
#simorgh-root h2,
#simorgh-root h3,
#simorgh-root h4,
#simorgh-root h5,
#simorgh-root h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

#simorgh-root a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

#simorgh-root b,
#simorgh-root strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

#simorgh-root code,
#simorgh-root kbd,
#simorgh-root samp,
#simorgh-root pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

#simorgh-root small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

#simorgh-root sub,
#simorgh-root sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

#simorgh-root sub {
  bottom: -0.25em;
}

#simorgh-root sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

#simorgh-root table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

#simorgh-root button,
#simorgh-root input,
#simorgh-root optgroup,
#simorgh-root select,
#simorgh-root textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

#simorgh-root button,
#simorgh-root select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

#simorgh-root button,
#simorgh-root input:where([type='button']),
#simorgh-root input:where([type='reset']),
#simorgh-root input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

#simorgh-root :-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

#simorgh-root :-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

#simorgh-root progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

#simorgh-root ::-webkit-inner-spin-button,
#simorgh-root ::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

#simorgh-root [type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

#simorgh-root ::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

#simorgh-root ::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

#simorgh-root summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

#simorgh-root blockquote,
#simorgh-root dl,
#simorgh-root dd,
#simorgh-root h1,
#simorgh-root h2,
#simorgh-root h3,
#simorgh-root h4,
#simorgh-root h5,
#simorgh-root h6,
#simorgh-root hr,
#simorgh-root figure,
#simorgh-root p,
#simorgh-root pre {
  margin: 0;
}

#simorgh-root fieldset {
  margin: 0;
  padding: 0;
}

#simorgh-root legend {
  padding: 0;
}

#simorgh-root ol,
#simorgh-root ul,
#simorgh-root menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

#simorgh-root dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

#simorgh-root textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

#simorgh-root input::-moz-placeholder, #simorgh-root textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

#simorgh-root input::placeholder,
#simorgh-root textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

#simorgh-root button,
#simorgh-root [role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

#simorgh-root :disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

#simorgh-root img,
#simorgh-root svg,
#simorgh-root video,
#simorgh-root canvas,
#simorgh-root audio,
#simorgh-root iframe,
#simorgh-root embed,
#simorgh-root object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

#simorgh-root img,
#simorgh-root video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

#simorgh-root [hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root,
#simorgh-root [data-theme]{
  background-color: hsla(var(--b1) / 1);
  background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  color: hsla(var(--bc) / 1);
  color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}

#simorgh-root html{
  -webkit-tap-highlight-color: transparent;
}

:root{
  --csstools-color-scheme--light: initial;
  color-scheme: light;
  --pf: 224.55 87.611% 44.549%;
  --sf: 0 0% 48%;
  --af: 174 60% 40.784%;
  --nf: 219 14.085% 22.275%;
  --in: 198 93% 60%;
  --wa: 43 96% 56%;
  --er: 0 91% 71%;
  --inc: 198 100% 12%;
  --suc: 142.13 100% 87.255%;
  --wac: 43 100% 11%;
  --erc: 0 100% 14%;
  --rounded-box: 1rem;
  --rounded-btn: 0.5rem;
  --rounded-badge: 1.9rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-text-case: uppercase;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 224.55 87.611% 55.686%;
  --pc: 0 0% 100%;
  --s: 0 0% 60%;
  --sc: 0 0% 100%;
  --a: 174 60% 50.98%;
  --ac: 174.71 43.59% 15.294%;
  --n: 219 14.085% 27.843%;
  --nc: 0 0% 100%;
  --b1: 0 0% 100%;
  --b2: 0 0% 94.902%;
  --b3: 180 1.9608% 90%;
  --bc: 215 27.907% 16.863%;
  --su: 142.13 76.216% 36.275%;
}
#simorgh-root .container{
  width: 100%;
}
@media (min-width: 640px){

  #simorgh-root .container{
    max-width: 640px;
  }
}
@media (min-width: 768px){

  #simorgh-root .container{
    max-width: 768px;
  }
}
@media (min-width: 1024px){

  #simorgh-root .container{
    max-width: 1024px;
  }
}
@media (min-width: 1280px){

  #simorgh-root .container{
    max-width: 1280px;
  }
}
@media (min-width: 1536px){

  #simorgh-root .container{
    max-width: 1536px;
  }
}
#simorgh-root .alert{
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / 1);
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  padding: 1rem;
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
}
#simorgh-root .alert > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * (1 - 0));
  margin-top: calc(0.5rem * (1 - var(--tw-space-y-reverse)));
  margin-top: calc(0.5rem * calc(1 - 0));
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * 0);
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
@media (min-width: 768px){

  #simorgh-root .alert{
    flex-direction: row;
  }

  #simorgh-root .alert > :not([hidden]) ~ :not([hidden]){
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * (1 - 0));
    margin-top: calc(0px * (1 - var(--tw-space-y-reverse)));
    margin-top: calc(0px * calc(1 - 0));
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * 0);
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }
}
#simorgh-root .alert > :where(*){
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
#simorgh-root .badge{
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  height: 1.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  width: -moz-fit-content;
  width: fit-content;
  padding-left: 0.563rem;
  padding-right: 0.563rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: hsl(var(--n) / 1);
  border-color: hsl(var(--n) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / 1);
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / 1);
  color: hsl(var(--nc) / var(--tw-text-opacity));
  border-radius: 1.9rem;
  border-radius: var(--rounded-badge, 1.9rem);
}
#simorgh-root .btn{
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-color: transparent;
  border-color: hsl(var(--n) / 1);
  border-color: hsl(var(--n) / var(--tw-border-opacity));
  text-align: center;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  height: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 1em;
  min-height: 3rem;
  font-weight: 600;
  text-transform: uppercase;
  text-transform: var(--btn-text-case, uppercase);
  text-decoration-line: none;
  border-width: 1px;
  border-width: var(--border-btn, 1px);
  animation: button-pop 0.25s ease-out;
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
  --tw-border-opacity: 1;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / 1);
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / 1);
  color: hsl(var(--nc) / var(--tw-text-opacity));
}
#simorgh-root .btn-disabled,
  #simorgh-root .btn[disabled]{
  pointer-events: none;
}
#simorgh-root .btn.loading,
    #simorgh-root .btn.loading:hover{
  pointer-events: none;
}
#simorgh-root .btn.loading:before{
  margin-right: 0.5rem;
  height: 1rem;
  width: 1rem;
  border-radius: 9999px;
  border-width: 2px;
  animation: spin 2s linear infinite;
  content: "";
  border-top-color: transparent;
  border-left-color: transparent;
  border-bottom-color: currentColor;
  border-right-color: currentColor;
}
@media (prefers-reduced-motion: reduce){

  #simorgh-root .btn.loading:before{
    animation: spin 10s linear infinite;
  }
}
@keyframes spin{

  from{
    transform: rotate(0deg);
  }

  to{
    transform: rotate(360deg);
  }
}
#simorgh-root .btn-group > input[type="radio"].btn{
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
#simorgh-root .btn-group > input[type="radio"].btn:before{
  content: attr(data-title);
}
#simorgh-root .checkbox{
  flex-shrink: 0;
  --chkbg: var(--bc);
  --chkfg: var(--b1);
  height: 1.5rem;
  width: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-width: 1px;
  border-color: hsl(var(--bc) / 0.2);
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0.2;
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
}
#simorgh-root .dropdown{
  position: relative;
  display: inline-block;
}
#simorgh-root .dropdown > *:focus{
  outline: 2px solid transparent;
  outline-offset: 2px;
}
#simorgh-root .dropdown .dropdown-content{
  visibility: hidden;
  position: absolute;
  z-index: 50;
  opacity: 0;
  transform-origin: top;
  --tw-scale-x: .95;
  --tw-scale-y: .95;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(.95) scaleY(.95);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
#simorgh-root .dropdown-end .dropdown-content{
  right: 0px;
}
#simorgh-root .dropdown-left .dropdown-content{
  top: 0px;
  right: 100%;
  bottom: auto;
  transform-origin: right;
}
#simorgh-root .dropdown-right .dropdown-content{
  left: 100%;
  top: 0px;
  bottom: auto;
  transform-origin: left;
}
#simorgh-root .dropdown-bottom .dropdown-content{
  bottom: auto;
  top: 100%;
  transform-origin: top;
}
#simorgh-root .dropdown-top .dropdown-content{
  bottom: 100%;
  top: auto;
  transform-origin: bottom;
}
#simorgh-root .dropdown-end.dropdown-right .dropdown-content{
  bottom: 0px;
  top: auto;
}
#simorgh-root .dropdown-end.dropdown-left .dropdown-content{
  bottom: 0px;
  top: auto;
}
#simorgh-root .dropdown.dropdown-open .dropdown-content,
#simorgh-root .dropdown.dropdown-hover:hover .dropdown-content,
#simorgh-root .dropdown:not(.dropdown-hover):focus .dropdown-content,
#simorgh-root .dropdown:not(.dropdown-hover):focus-within .dropdown-content{
  visibility: visible;
  opacity: 1;
}
#simorgh-root .footer{
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  align-items: start;
  justify-items: start;
  place-items: start;
  grid-row-gap: 2.5rem;
  row-gap: 2.5rem;
  grid-column-gap: 1rem;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}
#simorgh-root .footer > *{
  display: grid;
  align-items: start;
  justify-items: start;
  place-items: start;
  grid-gap: 0.5rem;
  gap: 0.5rem;
}
@media (min-width: 48rem){

  #simorgh-root .footer{
    grid-auto-flow: column;
  }

  #simorgh-root .footer-center{
    grid-auto-flow: row dense;
  }
}
#simorgh-root .\!label{
  display: flex !important;
  -webkit-user-select: none !important;
     -moz-user-select: none !important;
          user-select: none !important;
  align-items: center !important;
  justify-content: space-between !important;
  padding-left: 0.25rem !important;
  padding-right: 0.25rem !important;
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}
#simorgh-root .label{
  display: flex;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: space-between;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
#simorgh-root .input-group > *,
  #simorgh-root .input-group > .input,
  #simorgh-root .input-group > .textarea,
  #simorgh-root .input-group > .select{
  border-radius: 0px;
}
#simorgh-root .link{
  cursor: pointer;
  text-decoration-line: underline;
}
#simorgh-root .menu{
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}
#simorgh-root .menu.horizontal{
  display: inline-flex;
  flex-direction: row;
}
#simorgh-root .menu.horizontal :where(li){
  flex-direction: row;
}
#simorgh-root :where(.menu li){
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}
#simorgh-root .menu :where(li:not(.menu-title)) > :where(*:not(ul)){
  display: flex;
}
#simorgh-root .menu :where(li:not(.disabled):not(.menu-title)) > :where(*:not(ul)){
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  outline: 2px solid transparent;
  outline-offset: 2px;
}
#simorgh-root .menu > :where(li > *:not(ul):focus){
  outline: 2px solid transparent;
  outline-offset: 2px;
}
#simorgh-root .menu > :where(li.disabled > *:not(ul):focus){
  cursor: auto;
}
#simorgh-root .menu > :where(li) :where(ul){
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
#simorgh-root .menu > :where(li) > :where(ul){
  position: absolute;
  display: none;
  top: auto;
  top: initial;
  left: 100%;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li:hover) > :where(ul){
  display: flex;
}
#simorgh-root .menu > :where(li:focus) > :where(ul){
  display: flex;
}
#simorgh-root .progress{
  position: relative;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  overflow: hidden;
  height: 0.5rem;
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
}
#simorgh-root .select{
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  height: 3rem;
  padding-left: 1rem;
  padding-right: 2.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 2;
  min-height: 3rem;
  border-width: 1px;
  border-color: hsl(var(--bc) / 0);
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / 1);
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  font-weight: 600;
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
  background-image: linear-gradient(45deg, transparent 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, transparent 50%);
  background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16px) calc(1px + 50%);
  background-size: 4px 4px, 4px 4px;
  background-repeat: no-repeat;
}
#simorgh-root .select[multiple]{
  height: auto;
}
#simorgh-root .tabs{
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
}
#simorgh-root .tab{
  position: relative;
  display: inline-flex;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  text-align: center;
  height: 2rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 2;
  --tab-padding: 1rem;
  --tw-text-opacity: 0.5;
  --tab-color: hsla(var(--bc) / var(--tw-text-opacity, 1));
  --tab-bg: hsla(var(--b1) / var(--tw-bg-opacity, 1));
  --tab-border-color: hsla(var(--b3) / var(--tw-bg-opacity, 1));
  color: var(--tab-color);
  padding-left: 1rem;
  padding-left: var(--tab-padding, 1rem);
  padding-right: 1rem;
  padding-right: var(--tab-padding, 1rem);
}
#simorgh-root .table{
  position: relative;
  text-align: left;
}
#simorgh-root .table th:first-child{
  position: sticky;
  left: 0px;
  z-index: 11;
}
#simorgh-root .textarea{
  flex-shrink: 1;
  min-height: 3rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 2;
  border-width: 1px;
  border-color: hsl(var(--bc) / 0);
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 0;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / 1);
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
}
#simorgh-root .toast{
  position: fixed;
  display: flex;
  min-width: -moz-fit-content;
  min-width: fit-content;
  flex-direction: column;
  gap: 0.5rem;
  padding: 1rem;
}
#simorgh-root .tooltip{
  position: relative;
  display: inline-block;
  --tooltip-offset: calc(100% + 1px + var(--tooltip-tail, 0px));
  text-align: center;
  --tooltip-tail: 3px;
  --tooltip-color: hsl(var(--n));
  --tooltip-text-color: hsl(var(--nc));
  --tooltip-tail-offset: calc(100% + 1px - var(--tooltip-tail));
}
#simorgh-root .tooltip:before{
  position: absolute;
  pointer-events: none;
  z-index: 999;
  content: attr(data-tip);
  content: var(--tw-content);
  --tw-content: attr(data-tip);
  max-width: 20rem;
  border-radius: 0.25rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  background-color: var(--tooltip-color);
  color: var(--tooltip-text-color);
  width: -moz-max-content;
  width: max-content;
}
#simorgh-root .tooltip:before, #simorgh-root .tooltip-top:before{
  transform: translateX(-50%);
  top: auto;
  left: 50%;
  right: auto;
  bottom: var(--tooltip-offset);
}
#simorgh-root .tooltip-bottom:before{
  transform: translateX(-50%);
  top: var(--tooltip-offset);
  left: 50%;
  right: auto;
  bottom: auto;
}
#simorgh-root .badge-primary{
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / 1);
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / 1);
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
#simorgh-root .badge-success{
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / 1);
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc, var(--nc)) / 1);
  color: hsl(var(--suc, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .badge-warning{
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / 1);
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac, var(--nc)) / 1);
  color: hsl(var(--wac, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .badge-error{
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / 1);
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc, var(--nc)) / 1);
  color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .badge-outline.badge-primary{
  --tw-text-opacity: 1;
  color: hsl(var(--p) / 1);
  color: hsl(var(--p) / var(--tw-text-opacity));
}
#simorgh-root .badge-outline.badge-success{
  --tw-text-opacity: 1;
  color: hsl(var(--su) / 1);
  color: hsl(var(--su) / var(--tw-text-opacity));
}
#simorgh-root .badge-outline.badge-warning{
  --tw-text-opacity: 1;
  color: hsl(var(--wa) / 1);
  color: hsl(var(--wa) / var(--tw-text-opacity));
}
#simorgh-root .badge-outline.badge-error{
  --tw-text-opacity: 1;
  color: hsl(var(--er) / 1);
  color: hsl(var(--er) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--nf, var(--n)) / 1);
  border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / 1);
  color: hsl(var(--nc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-primary .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / 1);
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / 1);
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-secondary .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / 1);
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / 1);
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / 1);
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-accent .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--a) / 1);
  border-color: hsl(var(--a) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--a) / 1);
  background-color: hsl(var(--a) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / 1);
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline .badge.outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--nf, var(--n)) / 1);
  border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
  background-color: transparent;
}
#simorgh-root .btn-outline.btn-primary .badge-outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--p) / 1);
  color: hsl(var(--p) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-secondary .badge-outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / 1);
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--s) / 1);
  color: hsl(var(--s) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-accent .badge-outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--a) / 1);
  border-color: hsl(var(--a) / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--a) / 1);
  color: hsl(var(--a) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-info .badge-outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / 1);
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--in) / 1);
  color: hsl(var(--in) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-success .badge-outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / 1);
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--su) / 1);
  color: hsl(var(--su) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-warning .badge-outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / 1);
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--wa) / 1);
  color: hsl(var(--wa) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-error .badge-outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / 1);
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--er) / 1);
  color: hsl(var(--er) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline:hover .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2, var(--b1)) / 1);
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / 1);
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / 1);
  color: hsl(var(--bc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline:hover .badge.outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2, var(--b1)) / 1);
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--nc) / 1);
  color: hsl(var(--nc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-primary:hover .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--pc) / 1);
  border-color: hsl(var(--pc) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--pc) / 1);
  background-color: hsl(var(--pc) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--p) / 1);
  color: hsl(var(--p) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-primary:hover .badge.outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--pc) / 1);
  border-color: hsl(var(--pc) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--pf, var(--p)) / 1);
  background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / 1);
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-secondary:hover .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--sc) / 1);
  border-color: hsl(var(--sc) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--sc) / 1);
  background-color: hsl(var(--sc) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--s) / 1);
  color: hsl(var(--s) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-secondary:hover .badge.outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--sc) / 1);
  border-color: hsl(var(--sc) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--sf, var(--s)) / 1);
  background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / 1);
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-accent:hover .badge{
  --tw-border-opacity: 1;
  border-color: hsl(var(--ac) / 1);
  border-color: hsl(var(--ac) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--ac) / 1);
  background-color: hsl(var(--ac) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--a) / 1);
  color: hsl(var(--a) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-accent:hover .badge.outline{
  --tw-border-opacity: 1;
  border-color: hsl(var(--ac) / 1);
  border-color: hsl(var(--ac) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--af, var(--a)) / 1);
  background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / 1);
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
#simorgh-root .btm-nav>*:where(.active){
  border-top-width: 2px;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / 1);
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}
#simorgh-root .btm-nav>*.disabled,
    #simorgh-root .btm-nav>*.disabled:hover,
    #simorgh-root .btm-nav>*[disabled],
    #simorgh-root .btm-nav>*[disabled]:hover{
  pointer-events: none;
  --tw-border-opacity: 0;
  background-color: hsl(var(--n) / 0.1);
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.1;
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2;
}
#simorgh-root .btm-nav>* .\!label{
  font-size: 1rem !important;
  line-height: 1.5rem !important;
}
#simorgh-root .btm-nav>* .label{
  font-size: 1rem;
  line-height: 1.5rem;
}
#simorgh-root .btn:active:hover,
  #simorgh-root .btn:active:focus{
  animation: none;
}
#simorgh-root .btn:not(.no-animation):active:hover,
  #simorgh-root .btn:not(.no-animation):active:focus{
  transform: scale(0.95);
  transform: scale(var(--btn-focus-scale, 0.95));
}
#simorgh-root .btn:hover,
    #simorgh-root .btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--nf, var(--n)) / 1);
  border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--nf, var(--n)) / 1);
  background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
}
#simorgh-root .btn:focus-visible{
  outline: 2px solid hsl(var(--nf));
  outline-offset: 2px;
}
#simorgh-root .btn-primary{
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / 1);
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / 1);
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
#simorgh-root .btn-primary:hover,
    #simorgh-root .btn-primary.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--pf, var(--p)) / 1);
  border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--pf, var(--p)) / 1);
  background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
}
#simorgh-root .btn-primary:focus-visible{
  outline: 2px solid hsl(var(--p));
}
#simorgh-root .btn-success{
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / 1);
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / 1);
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc, var(--nc)) / 1);
  color: hsl(var(--suc, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .btn-success:hover,
    #simorgh-root .btn-success.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / 1);
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / 1);
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
}
#simorgh-root .btn-success:focus-visible{
  outline: 2px solid hsl(var(--su));
}
#simorgh-root .btn-error{
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / 1);
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / 1);
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc, var(--nc)) / 1);
  color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .btn-error:hover,
    #simorgh-root .btn-error.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / 1);
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / 1);
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
}
#simorgh-root .btn-error:focus-visible{
  outline: 2px solid hsl(var(--er));
}
#simorgh-root .btn.glass:hover,
    #simorgh-root .btn.glass.btn-active{
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}
#simorgh-root .btn.glass:focus-visible{
  outline: 2px solid currentColor;
}
#simorgh-root .btn-ghost{
  border-width: 1px;
  border-color: transparent;
  background-color: transparent;
  color: currentColor;
}
#simorgh-root .btn-ghost:hover,
    #simorgh-root .btn-ghost.btn-active{
  --tw-border-opacity: 0;
  background-color: hsl(var(--bc) / 0.2);
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
}
#simorgh-root .btn-ghost:focus-visible{
  outline: 2px solid currentColor;
}
#simorgh-root .btn-outline{
  border-color: currentColor;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / 1);
  color: hsl(var(--bc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline:hover,
    #simorgh-root .btn-outline.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--bc) / 1);
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / 1);
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--b1) / 1);
  color: hsl(var(--b1) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-primary{
  --tw-text-opacity: 1;
  color: hsl(var(--p) / 1);
  color: hsl(var(--p) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-primary:hover,
      #simorgh-root .btn-outline.btn-primary.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--pf, var(--p)) / 1);
  border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--pf, var(--p)) / 1);
  background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / 1);
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-secondary{
  --tw-text-opacity: 1;
  color: hsl(var(--s) / 1);
  color: hsl(var(--s) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-secondary:hover,
      #simorgh-root .btn-outline.btn-secondary.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--sf, var(--s)) / 1);
  border-color: hsl(var(--sf, var(--s)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--sf, var(--s)) / 1);
  background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / 1);
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-accent{
  --tw-text-opacity: 1;
  color: hsl(var(--a) / 1);
  color: hsl(var(--a) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-accent:hover,
      #simorgh-root .btn-outline.btn-accent.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--af, var(--a)) / 1);
  border-color: hsl(var(--af, var(--a)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--af, var(--a)) / 1);
  background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--ac) / 1);
  color: hsl(var(--ac) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-success{
  --tw-text-opacity: 1;
  color: hsl(var(--su) / 1);
  color: hsl(var(--su) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-success:hover,
      #simorgh-root .btn-outline.btn-success.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--su) / 1);
  border-color: hsl(var(--su) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--su) / 1);
  background-color: hsl(var(--su) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--suc, var(--nc)) / 1);
  color: hsl(var(--suc, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-info{
  --tw-text-opacity: 1;
  color: hsl(var(--in) / 1);
  color: hsl(var(--in) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-info:hover,
      #simorgh-root .btn-outline.btn-info.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--in) / 1);
  border-color: hsl(var(--in) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--in) / 1);
  background-color: hsl(var(--in) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--inc, var(--nc)) / 1);
  color: hsl(var(--inc, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-warning{
  --tw-text-opacity: 1;
  color: hsl(var(--wa) / 1);
  color: hsl(var(--wa) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-warning:hover,
      #simorgh-root .btn-outline.btn-warning.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / 1);
  border-color: hsl(var(--wa) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / 1);
  background-color: hsl(var(--wa) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--wac, var(--nc)) / 1);
  color: hsl(var(--wac, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-error{
  --tw-text-opacity: 1;
  color: hsl(var(--er) / 1);
  color: hsl(var(--er) / var(--tw-text-opacity));
}
#simorgh-root .btn-outline.btn-error:hover,
      #simorgh-root .btn-outline.btn-error.btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--er) / 1);
  border-color: hsl(var(--er) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / 1);
  background-color: hsl(var(--er) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--erc, var(--nc)) / 1);
  color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}
#simorgh-root .btn-disabled,
  #simorgh-root .btn-disabled:hover,
  #simorgh-root .btn[disabled],
  #simorgh-root .btn[disabled]:hover{
  --tw-border-opacity: 0;
  background-color: hsl(var(--n) / 0.2);
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2;
}
#simorgh-root .btn.loading.btn-square:before,
    #simorgh-root .btn.loading.btn-circle:before{
  margin-right: 0px;
}
#simorgh-root .btn.loading.btn-xl:before,
    #simorgh-root .btn.loading.btn-lg:before{
  height: 1.25rem;
  width: 1.25rem;
}
#simorgh-root .btn.loading.btn-sm:before,
    #simorgh-root .btn.loading.btn-xs:before{
  height: 0.75rem;
  width: 0.75rem;
}
#simorgh-root .btn-group > input[type="radio"]:checked.btn,
  #simorgh-root .btn-group > .btn-active{
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / 1);
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / 1);
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
#simorgh-root .btn-group > input[type="radio"]:checked.btn:focus-visible, #simorgh-root .btn-group > .btn-active:focus-visible{
  outline: 2px solid hsl(var(--p));
}
@keyframes button-pop{

  0%{
    transform: scale(0.95);
    transform: scale(var(--btn-focus-scale, 0.95));
  }

  40%{
    transform: scale(1.02);
  }

  100%{
    transform: scale(1);
  }
}
#simorgh-root .checkbox:focus-visible{
  outline: 2px solid hsl(var(--bc));
  outline-offset: 2px;
}
#simorgh-root .checkbox:checked,
  #simorgh-root .checkbox[checked="true"],
  #simorgh-root .checkbox[aria-checked="true"]{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / 1);
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
  animation: checkmark 0.2s ease-in-out;
  animation: checkmark var(--animation-input, 0.2s) ease-in-out;
  background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}
#simorgh-root .checkbox:indeterminate{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / 1);
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  background-repeat: no-repeat;
  animation: checkmark 0.2s ease-in-out;
  animation: checkmark var(--animation-input, 0.2s) ease-in-out;
  background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%), linear-gradient(0deg, hsl(var(--chkbg)) 43%, hsl(var(--chkfg)) 43%, hsl(var(--chkfg)) 57%, hsl(var(--chkbg)) 57%);
}
#simorgh-root .checkbox-secondary{
  --chkbg: var(--s);
  --chkfg: var(--sc);
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / 1);
  border-color: hsl(var(--s) / var(--tw-border-opacity));
}
#simorgh-root .checkbox-secondary:hover{
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / 1);
  border-color: hsl(var(--s) / var(--tw-border-opacity));
}
#simorgh-root .checkbox-secondary:focus-visible{
  outline: 2px solid hsl(var(--s));
}
#simorgh-root .checkbox-secondary:checked,
    #simorgh-root .checkbox-secondary[checked="true"],
    #simorgh-root .checkbox-secondary[aria-checked="true"]{
  --tw-border-opacity: 1;
  border-color: hsl(var(--s) / 1);
  border-color: hsl(var(--s) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--s) / 1);
  background-color: hsl(var(--s) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--sc) / 1);
  color: hsl(var(--sc) / var(--tw-text-opacity));
}
#simorgh-root .checkbox:disabled{
  cursor: not-allowed;
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: hsl(var(--bc) / 1);
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  opacity: 0.2;
}
@keyframes checkmark{

  0%{
    background-position-y: 5px;
  }

  50%{
    background-position-y: -2px;
  }

  100%{
    background-position-y: 0;
  }
}
#simorgh-root [dir="rtl"] .checkbox:checked,
    #simorgh-root [dir="rtl"] .checkbox[checked="true"],
    #simorgh-root [dir="rtl"] .checkbox[aria-checked="true"]{
  background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%), linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%), linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%), linear-gradient(-45deg, hsl(var(--chkbg)) 30%, hsl(var(--chkfg)) 30.99%, hsl(var(--chkfg)) 40%, transparent 40.99%), linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}
#simorgh-root .drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-primary{
  outline: 2px solid hsl(var(--p));
}
#simorgh-root .drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-success{
  outline: 2px solid hsl(var(--su));
}
#simorgh-root .drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-error{
  outline: 2px solid hsl(var(--er));
}
#simorgh-root .drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-ghost{
  outline: 2px solid currentColor;
}
#simorgh-root .dropdown.dropdown-open .dropdown-content,
#simorgh-root .dropdown.dropdown-hover:hover .dropdown-content,
#simorgh-root .dropdown:focus .dropdown-content,
#simorgh-root .dropdown:focus-within .dropdown-content{
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(1) scaleY(1);
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .\!label a:hover{
  --tw-text-opacity: 1 !important;
  color: hsl(var(--bc) / 1) !important;
  color: hsl(var(--bc) / var(--tw-text-opacity)) !important;
}
#simorgh-root .label a:hover{
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / 1);
  color: hsl(var(--bc) / var(--tw-text-opacity));
}
#simorgh-root .link:focus{
  outline: 2px solid transparent;
  outline-offset: 2px;
}
#simorgh-root .link:focus-visible{
  outline: 2px solid currentColor;
  outline-offset: 2px;
}
#simorgh-root .menu.horizontal > li.bordered > a,
        #simorgh-root .menu.horizontal > li.bordered > button,
        #simorgh-root .menu.horizontal > li.bordered > span{
  border-left-width: 0px;
  border-bottom-width: 4px;
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
}
#simorgh-root .menu[class*=" px-"]:not(.menu[class*=" px-0"]) li > *,
  #simorgh-root .menu[class^="px-"]:not(.menu[class^="px-0"]) li > *,
  #simorgh-root .menu[class*=" p-"]:not(.menu[class*=" p-0"]) li > *,
  #simorgh-root .menu[class^="p-"]:not(.menu[class^="p-0"]) li > *{
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
}
#simorgh-root .menu :where(li.bordered > *){
  border-left-width: 4px;
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
}
#simorgh-root .menu :where(li) > :where(*:not(ul)){
  gap: 0.75rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: currentColor;
}
#simorgh-root .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
  #simorgh-root .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover){
  background-color: hsl(var(--bc) / 0.1);
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.1;
}
#simorgh-root .menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
  #simorgh-root .menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active){
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / 1);
  background-color: hsl(var(--p) / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: hsl(var(--pc) / 1);
  color: hsl(var(--pc) / var(--tw-text-opacity));
}
#simorgh-root .menu :where(li:empty){
  margin-left: 1rem;
  margin-right: 1rem;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  height: 1px;
  background-color: hsl(var(--bc) / 0.1);
  background-color: hsl(var(--bc) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.1;
}
#simorgh-root .menu li.disabled > *{
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2;
}
#simorgh-root .menu li.disabled > *:hover{
  background-color: transparent;
}
#simorgh-root .menu li.hover-bordered a{
  border-left-width: 4px;
  border-color: transparent;
}
#simorgh-root .menu li.hover-bordered a:hover{
  --tw-border-opacity: 1;
  border-color: hsl(var(--p) / 1);
  border-color: hsl(var(--p) / var(--tw-border-opacity));
}
#simorgh-root .menu.compact li > a,
      #simorgh-root .menu.compact li > span{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}
#simorgh-root .menu .menu-title{
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 700;
  opacity: 0.4;
}
#simorgh-root .menu .menu-title > *{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
#simorgh-root .menu :where(li:not(.disabled)) > :where(*:not(ul)){
  outline: 2px solid transparent;
  outline-offset: 2px;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
#simorgh-root .menu > :where(li:first-child){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: 0;
  border-bottom-right-radius: initial;
  border-bottom-left-radius: 0;
  border-bottom-left-radius: initial;
}
#simorgh-root .menu > :where(li:first-child) > :where(:not(ul)){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: 0;
  border-bottom-right-radius: initial;
  border-bottom-left-radius: 0;
  border-bottom-left-radius: initial;
}
#simorgh-root .menu > :where(li:last-child){
  border-top-left-radius: 0;
  border-top-left-radius: initial;
  border-top-right-radius: 0;
  border-top-right-radius: initial;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li:last-child) > :where(:not(ul)){
  border-top-left-radius: 0;
  border-top-left-radius: initial;
  border-top-right-radius: 0;
  border-top-right-radius: initial;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li:first-child:last-child){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li:first-child:last-child) > :where(:not(ul)){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li) > :where(ul) :where(li){
  width: 100%;
  white-space: nowrap;
}
#simorgh-root .menu > :where(li) > :where(ul) :where(li) :where(ul){
  padding-left: 1rem;
}
#simorgh-root .menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)){
  width: 100%;
  white-space: nowrap;
}
#simorgh-root .menu > :where(li) > :where(ul) > :where(li:first-child){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: 0;
  border-bottom-right-radius: initial;
  border-bottom-left-radius: 0;
  border-bottom-left-radius: initial;
}
#simorgh-root .menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: 0;
  border-bottom-right-radius: initial;
  border-bottom-left-radius: 0;
  border-bottom-left-radius: initial;
}
#simorgh-root .menu > :where(li) > :where(ul) > :where(li:last-child){
  border-top-left-radius: 0;
  border-top-left-radius: initial;
  border-top-right-radius: 0;
  border-top-right-radius: initial;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)){
  border-top-left-radius: 0;
  border-top-left-radius: initial;
  border-top-right-radius: 0;
  border-top-right-radius: initial;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li) > :where(ul) > :where(li:first-child:last-child){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .menu > :where(li) > :where(ul) > :where(li:first-child:last-child) > :where(:not(ul)){
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}
#simorgh-root .progress::-moz-progress-bar{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / 1);
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
}
#simorgh-root .progress:indeterminate::after{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--n) / 1);
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  content: "";
  position: absolute;
  top: 0px;
  bottom: 0px;
  left: -40%;
  width: 33.333333%;
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
  animation: progress-loading 5s infinite ease-in-out;
}
#simorgh-root .progress::-webkit-progress-bar{
  background-color: hsl(var(--n) / 0.2);
  background-color: hsl(var(--n) / var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
}
#simorgh-root .progress::-webkit-progress-value{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--nf, var(--n)) / 1);
  background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
}
@keyframes progress-loading{

  50%{
    left: 107%;
  }
}
@keyframes radiomark{

  0%{
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
  }

  50%{
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
  }

  100%{
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
  }
}
@keyframes rating-pop{

  0%{
    transform: translateY(-0.125em);
  }

  40%{
    transform: translateY(-0.125em);
  }

  100%{
    transform: translateY(0);
  }
}
#simorgh-root .select:focus{
  outline: 2px solid hsla(var(--bc) / 0.2);
  outline-offset: 2px;
}
#simorgh-root .select-disabled,
  #simorgh-root .select[disabled]{
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2, var(--b1)) / 1);
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / 1);
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  --tw-text-opacity: 0.2;
}
#simorgh-root .select-disabled::-moz-placeholder, #simorgh-root .select[disabled]::-moz-placeholder{
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}
#simorgh-root .select-disabled::placeholder,
  #simorgh-root .select[disabled]::placeholder{
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}
#simorgh-root .select-multiple,
  #simorgh-root .select[multiple],
  #simorgh-root .select[size].select:not([size="1"]){
  background-image: none;
  padding-right: 1rem;
}
#simorgh-root [dir="rtl"] .select{
  background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
}
#simorgh-root .tab:hover{
  --tw-text-opacity: 1;
}
#simorgh-root .tab.tab-active:not(.tab-disabled):not([disabled]){
  border-color: hsl(var(--bc) / 1);
  border-color: hsl(var(--bc) / var(--tw-border-opacity));
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
}
#simorgh-root .tab:focus{
  outline: 2px solid transparent;
  outline-offset: 2px;
}
#simorgh-root .tab:focus-visible{
  outline: 2px solid currentColor;
  outline-offset: -3px;
}
#simorgh-root .tab:focus-visible.tab-lifted{
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--tab-radius, 0.5rem);
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--tab-radius, 0.5rem);
}
#simorgh-root .tab-disabled,
  #simorgh-root .tab-disabled:hover,
  #simorgh-root .tab[disabled],
  #simorgh-root .tab[disabled]:hover{
  cursor: not-allowed;
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-text-opacity));
  --tw-text-opacity: 0.2;
}
#simorgh-root .tabs-boxed .tab{
  border-radius: 0.5rem;
  border-radius: var(--rounded-btn, 0.5rem);
}
#simorgh-root .table :where(th, td){
  white-space: nowrap;
  padding: 1rem;
  vertical-align: middle;
}
#simorgh-root .table tr.active th,
    #simorgh-root .table tr.active td,
    #simorgh-root .table tr.active:nth-child(even) th,
    #simorgh-root .table tr.active:nth-child(even) td{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b3, var(--b2)) / 1);
  background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}
#simorgh-root .table tr.hover:hover th,
    #simorgh-root .table tr.hover:hover td,
    #simorgh-root .table tr.hover:nth-child(even):hover th,
    #simorgh-root .table tr.hover:nth-child(even):hover td{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b3, var(--b2)) / 1);
  background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}
#simorgh-root .table:where(:not(.table-zebra)) :where(thead, tbody, tfoot) :where(tr:not(:last-child) :where(th, td)){
  border-bottom-width: 1px;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2, var(--b1)) / 1);
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}
#simorgh-root .table :where(thead, tfoot) :where(th, td){
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / 1);
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 700;
  text-transform: uppercase;
}
#simorgh-root .table :where(tbody th, tbody td){
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / 1);
  background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}
#simorgh-root :where(.table *:first-child) :where(*:first-child) :where(th, td):first-child{
  border-top-left-radius: 1rem;
  border-top-left-radius: var(--rounded-box, 1rem);
}
#simorgh-root :where(.table *:first-child) :where(*:first-child) :where(th, td):last-child{
  border-top-right-radius: 1rem;
  border-top-right-radius: var(--rounded-box, 1rem);
}
#simorgh-root :where(.table *:last-child) :where(*:last-child) :where(th, td):first-child{
  border-bottom-left-radius: 1rem;
  border-bottom-left-radius: var(--rounded-box, 1rem);
}
#simorgh-root :where(.table *:last-child) :where(*:last-child) :where(th, td):last-child{
  border-bottom-right-radius: 1rem;
  border-bottom-right-radius: var(--rounded-box, 1rem);
}
#simorgh-root .textarea:focus{
  outline: 2px solid hsla(var(--bc) / 0.2);
  outline-offset: 2px;
}
#simorgh-root .textarea-disabled,
  #simorgh-root .textarea[disabled]{
  cursor: not-allowed;
  --tw-border-opacity: 1;
  border-color: hsl(var(--b2, var(--b1)) / 1);
  border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b2, var(--b1)) / 1);
  background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
  --tw-text-opacity: 0.2;
}
#simorgh-root .textarea-disabled::-moz-placeholder, #simorgh-root .textarea[disabled]::-moz-placeholder{
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}
#simorgh-root .textarea-disabled::placeholder,
  #simorgh-root .textarea[disabled]::placeholder{
  color: hsl(var(--bc) / 0.2);
  color: hsl(var(--bc) / var(--tw-placeholder-opacity));
  --tw-placeholder-opacity: 0.2;
}
#simorgh-root .toast>*{
  animation: toast-pop 0.25s ease-out;
}
@keyframes toast-pop{

  0%{
    transform: scale(0.9);
    opacity: 0;
  }

  100%{
    transform: scale(1);
    opacity: 1;
  }
}
#simorgh-root .tooltip:before,
#simorgh-root .tooltip:after{
  opacity: 0;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-delay: 100ms;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
#simorgh-root .tooltip:after{
  position: absolute;
  content: "";
  border-style: solid;
  border-width: 0;
  border-width: var(--tooltip-tail, 0);
  width: 0;
  height: 0;
  display: block;
}
#simorgh-root .tooltip.tooltip-open:before,
#simorgh-root .tooltip.tooltip-open:after,
#simorgh-root .tooltip:hover:before,
#simorgh-root .tooltip:hover:after{
  opacity: 1;
  transition-delay: 75ms;
}
#simorgh-root .tooltip:not([data-tip]):hover:before,
#simorgh-root .tooltip:not([data-tip]):hover:after{
  visibility: hidden;
  opacity: 0;
}
#simorgh-root .tooltip:after, #simorgh-root .tooltip-top:after{
  transform: translateX(-50%);
  border-color: var(--tooltip-color) transparent transparent transparent;
  top: auto;
  left: 50%;
  right: auto;
  bottom: var(--tooltip-tail-offset);
}
#simorgh-root .tooltip-bottom:after{
  transform: translateX(-50%);
  border-color: transparent transparent var(--tooltip-color) transparent;
  top: var(--tooltip-tail-offset);
  left: 50%;
  right: auto;
  bottom: auto;
}
#simorgh-root .rounded-box{
  border-radius: 1rem;
  border-radius: var(--rounded-box, 1rem);
}
#simorgh-root .badge-xs{
  height: 0.75rem;
  font-size: 0.75rem;
  line-height: .75rem;
  padding-left: 0.313rem;
  padding-right: 0.313rem;
}
#simorgh-root .btm-nav-xs>*:where(.active){
  border-top-width: 1px;
}
#simorgh-root .btm-nav-sm>*:where(.active){
  border-top-width: 2px;
}
#simorgh-root .btm-nav-md>*:where(.active){
  border-top-width: 2px;
}
#simorgh-root .btm-nav-lg>*:where(.active){
  border-top-width: 4px;
}
#simorgh-root .btn-sm{
  height: 2rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  min-height: 2rem;
  font-size: 0.875rem;
}
#simorgh-root .btn-square:where(.btn-sm){
  height: 2rem;
  width: 2rem;
  padding: 0px;
}
#simorgh-root .btn-circle:where(.btn-sm){
  height: 2rem;
  width: 2rem;
  border-radius: 9999px;
  padding: 0px;
}
#simorgh-root .checkbox-xs{
  height: 1rem;
  width: 1rem;
}
#simorgh-root :where(.toast){
  right: 0px;
  left: auto;
  top: auto;
  bottom: 0px;
  --tw-translate-x: 0px;
  --tw-translate-y: 0px;
  transform: translate(0px, 0px) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .toast:where(.toast-start){
  right: auto;
  left: 0px;
  --tw-translate-x: 0px;
  transform: translate(0px, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .toast:where(.toast-center){
  right: 50%;
  left: 50%;
  --tw-translate-x: -50%;
  transform: translate(-50%, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .toast:where(.toast-end){
  right: 0px;
  left: auto;
  --tw-translate-x: 0px;
  transform: translate(0px, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .toast:where(.toast-bottom){
  top: auto;
  bottom: 0px;
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), 0px) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .toast:where(.toast-middle){
  top: 50%;
  bottom: auto;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), -50%) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .toast:where(.toast-top){
  top: 0px;
  bottom: auto;
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), 0px) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .btn-group .btn:not(:first-child):not(:last-child){
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
#simorgh-root .btn-group .btn:first-child:not(:last-child){
  margin-top: -0px;
  margin-left: -1px;
  border-top-left-radius: 0.5rem;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0;
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0;
}
#simorgh-root .btn-group .btn:last-child:not(:first-child){
  border-top-left-radius: 0;
  border-top-right-radius: 0.5rem;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}
#simorgh-root .btn-group-horizontal .btn:not(:first-child):not(:last-child){
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
#simorgh-root .btn-group-horizontal .btn:first-child:not(:last-child){
  margin-top: -0px;
  margin-left: -1px;
  border-top-left-radius: 0.5rem;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0;
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0;
}
#simorgh-root .btn-group-horizontal .btn:last-child:not(:first-child){
  border-top-left-radius: 0;
  border-top-right-radius: 0.5rem;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}
#simorgh-root .btn-group-vertical .btn:first-child:not(:last-child){
  margin-top: -1px;
  margin-left: -0px;
  border-top-left-radius: 0.5rem;
  border-top-left-radius: var(--rounded-btn, 0.5rem);
  border-top-right-radius: 0.5rem;
  border-top-right-radius: var(--rounded-btn, 0.5rem);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
#simorgh-root .btn-group-vertical .btn:last-child:not(:first-child){
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-left-radius: 0.5rem;
  border-bottom-left-radius: var(--rounded-btn, 0.5rem);
  border-bottom-right-radius: 0.5rem;
  border-bottom-right-radius: var(--rounded-btn, 0.5rem);
}
#simorgh-root .fixed{
  position: fixed;
}
#simorgh-root .absolute{
  position: absolute;
}
#simorgh-root .relative{
  position: relative;
}
#simorgh-root .sticky{
  position: sticky;
}
#simorgh-root .bottom-0{
  bottom: 0px;
}
#simorgh-root .bottom-10{
  bottom: 2.5rem;
}
#simorgh-root .left-0{
  left: 0px;
}
#simorgh-root .left-1\/2{
  left: 50%;
}
#simorgh-root .left-full{
  left: 100%;
}
#simorgh-root .right-0{
  right: 0px;
}
#simorgh-root .right-1\/2{
  right: 50%;
}
#simorgh-root .right-6{
  right: 1.5rem;
}
#simorgh-root .top-0{
  top: 0px;
}
#simorgh-root .top-12{
  top: 3rem;
}
#simorgh-root .top-9{
  top: 2.25rem;
}
#simorgh-root .z-10{
  z-index: 10;
}
#simorgh-root .z-50{
  z-index: 50;
}
#simorgh-root .z-\[1\]{
  z-index: 1;
}
#simorgh-root .m-auto{
  margin: auto;
}
#simorgh-root .-mx-6{
  margin-left: -1.5rem;
  margin-right: -1.5rem;
}
#simorgh-root .mb-1{
  margin-bottom: 0.25rem;
}
#simorgh-root .mb-4{
  margin-bottom: 1rem;
}
#simorgh-root .ml-10{
  margin-left: 2.5rem;
}
#simorgh-root .mt-1{
  margin-top: 0.25rem;
}
#simorgh-root .mt-2{
  margin-top: 0.5rem;
}
#simorgh-root .mt-4{
  margin-top: 1rem;
}
#simorgh-root .mt-6{
  margin-top: 1.5rem;
}
#simorgh-root .block{
  display: block;
}
#simorgh-root .inline-block{
  display: inline-block;
}
#simorgh-root .flex{
  display: flex;
}
#simorgh-root .table{
  display: table;
}
#simorgh-root .grid{
  display: grid;
}
#simorgh-root .contents{
  display: contents;
}
#simorgh-root .h-0{
  height: 0px;
}
#simorgh-root .h-10{
  height: 2.5rem;
}
#simorgh-root .h-14{
  height: 3.5rem;
}
#simorgh-root .h-16{
  height: 4rem;
}
#simorgh-root .h-2{
  height: 0.5rem;
}
#simorgh-root .h-3\/4{
  height: 75%;
}
#simorgh-root .h-4{
  height: 1rem;
}
#simorgh-root .h-5{
  height: 1.25rem;
}
#simorgh-root .h-6{
  height: 1.5rem;
}
#simorgh-root .h-8{
  height: 2rem;
}
#simorgh-root .h-auto{
  height: auto;
}
#simorgh-root .h-full{
  height: 100%;
}
#simorgh-root .h-screen{
  height: 100vh;
}
#simorgh-root .w-10{
  width: 2.5rem;
}
#simorgh-root .w-10\/12{
  width: 83.333333%;
}
#simorgh-root .w-12{
  width: 3rem;
}
#simorgh-root .w-14{
  width: 3.5rem;
}
#simorgh-root .w-2{
  width: 0.5rem;
}
#simorgh-root .w-28{
  width: 7rem;
}
#simorgh-root .w-32{
  width: 8rem;
}
#simorgh-root .w-4{
  width: 1rem;
}
#simorgh-root .w-40{
  width: 10rem;
}
#simorgh-root .w-44{
  width: 11rem;
}
#simorgh-root .w-5{
  width: 1.25rem;
}
#simorgh-root .w-52{
  width: 13rem;
}
#simorgh-root .w-6{
  width: 1.5rem;
}
#simorgh-root .w-8{
  width: 2rem;
}
#simorgh-root .w-96{
  width: 24rem;
}
#simorgh-root .w-fit{
  width: -moz-fit-content;
  width: fit-content;
}
.w-full{
  width: 100%;
}
.w-screen{
  width: 100vw;
}
#simorgh-root .max-w-6xl{
  max-width: 72rem;
}
#simorgh-root .flex-1{
  flex: 1 1 0%;
}
#simorgh-root .shrink-0{
  flex-shrink: 0;
}
#simorgh-root .-translate-x-1\/2{
  --tw-translate-x: -50%;
  transform: translate(-50%, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .translate-x-1\/2{
  --tw-translate-x: 50%;
  transform: translate(50%, var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .translate-y-1\/2{
  --tw-translate-y: 50%;
  transform: translate(var(--tw-translate-x), 50%) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .-rotate-180{
  --tw-rotate: -180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(-180deg) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
#simorgh-root .transform{
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes spin{

  to{
    transform: rotate(360deg);
  }
}
#simorgh-root .animate-spin{
  animation: spin 1s linear infinite;
}
#simorgh-root .cursor-not-allowed{
  cursor: not-allowed;
}
#simorgh-root .cursor-pointer{
  cursor: pointer;
}
#simorgh-root .cursor-wait{
  cursor: wait;
}
#simorgh-root .select-none{
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
#simorgh-root .select-text{
  -webkit-user-select: text;
     -moz-user-select: text;
          user-select: text;
}
#simorgh-root .list-inside{
  list-style-position: inside;
}
#simorgh-root .list-disc{
  list-style-type: disc;
}
#simorgh-root .grid-cols-2{
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
#simorgh-root .grid-cols-5{
  grid-template-columns: repeat(5, minmax(0, 1fr));
}
#simorgh-root .flex-row{
  flex-direction: row;
}
#simorgh-root .flex-row-reverse{
  flex-direction: row-reverse;
}
#simorgh-root .flex-col{
  flex-direction: column;
}
#simorgh-root .flex-wrap{
  flex-wrap: wrap;
}
#simorgh-root .flex-nowrap{
  flex-wrap: nowrap;
}
#simorgh-root .items-start{
  align-items: flex-start;
}
#simorgh-root .items-center{
  align-items: center;
}
#simorgh-root .items-stretch{
  align-items: stretch;
}
#simorgh-root .justify-end{
  justify-content: flex-end;
}
#simorgh-root .justify-center{
  justify-content: center;
}
#simorgh-root .justify-between{
  justify-content: space-between;
}
#simorgh-root .gap-1{
  gap: 0.25rem;
}
#simorgh-root .gap-2{
  gap: 0.5rem;
}
#simorgh-root .gap-3{
  gap: 0.75rem;
}
#simorgh-root .gap-4{
  gap: 1rem;
}
#simorgh-root .gap-6{
  gap: 1.5rem;
}
#simorgh-root .gap-8{
  gap: 2rem;
}
#simorgh-root .gap-x-4{
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}
#simorgh-root .gap-y-2{
  row-gap: 0.5rem;
}
#simorgh-root .divide-x > :not([hidden]) ~ :not([hidden]){
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * 0);
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * (1 - 0));
  border-left-width: calc(1px * (1 - var(--tw-divide-x-reverse)));
  border-left-width: calc(1px * calc(1 - 0));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}
#simorgh-root .divide-x-2 > :not([hidden]) ~ :not([hidden]){
  --tw-divide-x-reverse: 0;
  border-right-width: calc(2px * 0);
  border-right-width: calc(2px * var(--tw-divide-x-reverse));
  border-left-width: calc(2px * (1 - 0));
  border-left-width: calc(2px * (1 - var(--tw-divide-x-reverse)));
  border-left-width: calc(2px * calc(1 - 0));
  border-left-width: calc(2px * calc(1 - var(--tw-divide-x-reverse)));
}
#simorgh-root .divide-y > :not([hidden]) ~ :not([hidden]){
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * (1 - 0));
  border-top-width: calc(1px * (1 - var(--tw-divide-y-reverse)));
  border-top-width: calc(1px * calc(1 - 0));
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * 0);
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
#simorgh-root .self-end{
  align-self: flex-end;
}
#simorgh-root .overflow-auto{
  overflow: auto;
}
#simorgh-root .overflow-hidden{
  overflow: hidden;
}
#simorgh-root .whitespace-nowrap{
  white-space: nowrap;
}
#simorgh-root .whitespace-break-spaces{
  white-space: break-spaces;
}
#simorgh-root .rounded{
  border-radius: 0.25rem;
}
#simorgh-root .rounded-full{
  border-radius: 9999px;
}
#simorgh-root .rounded-lg{
  border-radius: 0.5rem;
}
#simorgh-root .rounded-md{
  border-radius: 0.375rem;
}
#simorgh-root .rounded-b-lg{
  border-bottom-right-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}
#simorgh-root .rounded-t-lg{
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}
#simorgh-root .border{
  border-width: 1px;
}
#simorgh-root .border-2{
  border-width: 2px;
}
#simorgh-root .border-4{
  border-width: 4px;
}
#simorgh-root .border-b{
  border-bottom-width: 1px;
}
#simorgh-root .border-b-2{
  border-bottom-width: 2px;
}
#simorgh-root .border-l{
  border-left-width: 1px;
}
#simorgh-root .border-r{
  border-right-width: 1px;
}
#simorgh-root .border-t{
  border-top-width: 1px;
}
#simorgh-root .border-base-300{
  --tw-border-opacity: 1;
  border-color: hsl(var(--b3, var(--b2)) / 1);
  border-color: hsl(var(--b3, var(--b2)) / var(--tw-border-opacity, 1));
}
#simorgh-root .border-gray-300{
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, 1);
  border-color: rgba(209, 213, 219, var(--tw-border-opacity, 1));
}
#simorgh-root .border-gray-400{
  --tw-border-opacity: 1;
  border-color: rgba(156, 163, 175, 1);
  border-color: rgba(156, 163, 175, var(--tw-border-opacity, 1));
}
#simorgh-root .border-warning{
  --tw-border-opacity: 1;
  border-color: hsl(var(--wa) / 1);
  border-color: hsl(var(--wa) / var(--tw-border-opacity, 1));
}
#simorgh-root .border-white{
  --tw-border-opacity: 1;
  border-color: rgba(255, 255, 255, 1);
  border-color: rgba(255, 255, 255, var(--tw-border-opacity, 1));
}
#simorgh-root .border-yellow-500{
  --tw-border-opacity: 1;
  border-color: rgba(234, 179, 8, 1);
  border-color: rgba(234, 179, 8, var(--tw-border-opacity, 1));
}
#simorgh-root .border-b-gray-50{
  --tw-border-opacity: 1;
  border-bottom-color: rgba(249, 250, 251, 1);
  border-bottom-color: rgba(249, 250, 251, var(--tw-border-opacity, 1));
}
#simorgh-root .border-l-gray-50{
  --tw-border-opacity: 1;
  border-left-color: rgba(249, 250, 251, 1);
  border-left-color: rgba(249, 250, 251, var(--tw-border-opacity, 1));
}
#simorgh-root .border-r-gray-50{
  --tw-border-opacity: 1;
  border-right-color: rgba(249, 250, 251, 1);
  border-right-color: rgba(249, 250, 251, var(--tw-border-opacity, 1));
}
#simorgh-root .border-t-gray-400{
  --tw-border-opacity: 1;
  border-top-color: rgba(156, 163, 175, 1);
  border-top-color: rgba(156, 163, 175, var(--tw-border-opacity, 1));
}
#simorgh-root .border-t-primary{
  --tw-border-opacity: 1;
  border-top-color: hsl(var(--p) / 1);
  border-top-color: hsl(var(--p) / var(--tw-border-opacity, 1));
}
#simorgh-root .bg-\[\#253364\]{
  --tw-bg-opacity: 1;
  background-color: rgba(37, 51, 100, 1);
  background-color: rgba(37, 51, 100, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-\[\#E0F2FE\]{
  --tw-bg-opacity: 1;
  background-color: rgba(224, 242, 254, 1);
  background-color: rgba(224, 242, 254, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-\[\#E4E5E8\]{
  --tw-bg-opacity: 1;
  background-color: rgba(228, 229, 232, 1);
  background-color: rgba(228, 229, 232, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-\[\#F1F2F5\]{
  --tw-bg-opacity: 1;
  background-color: rgba(241, 242, 245, 1);
  background-color: rgba(241, 242, 245, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-\[\#F9FAFB\]{
  --tw-bg-opacity: 1;
  background-color: rgba(249, 250, 251, 1);
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-base-100{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--b1) / 1);
  background-color: hsl(var(--b1) / var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-black{
  --tw-bg-opacity: 1;
  background-color: rgba(0, 0, 0, 1);
  background-color: rgba(0, 0, 0, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-error{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--er) / 1);
  background-color: hsl(var(--er) / var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-100{
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, 1);
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-200{
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, 1);
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-50{
  --tw-bg-opacity: 1;
  background-color: rgba(249, 250, 251, 1);
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-500{
  --tw-bg-opacity: 1;
  background-color: rgba(107, 114, 128, 1);
  background-color: rgba(107, 114, 128, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-600{
  --tw-bg-opacity: 1;
  background-color: rgba(75, 85, 99, 1);
  background-color: rgba(75, 85, 99, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-700{
  --tw-bg-opacity: 1;
  background-color: rgba(55, 65, 81, 1);
  background-color: rgba(55, 65, 81, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-800{
  --tw-bg-opacity: 1;
  background-color: rgba(31, 41, 55, 1);
  background-color: rgba(31, 41, 55, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-gray-900{
  --tw-bg-opacity: 1;
  background-color: rgba(17, 24, 39, 1);
  background-color: rgba(17, 24, 39, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-green-500{
  --tw-bg-opacity: 1;
  background-color: rgba(34, 197, 94, 1);
  background-color: rgba(34, 197, 94, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-indigo-100{
  --tw-bg-opacity: 1;
  background-color: rgba(224, 231, 255, 1);
  background-color: rgba(224, 231, 255, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-primary{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--p) / 1);
  background-color: hsl(var(--p) / var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-purple-900{
  --tw-bg-opacity: 1;
  background-color: rgba(88, 28, 135, 1);
  background-color: rgba(88, 28, 135, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-transparent{
  background-color: transparent;
}
#simorgh-root .bg-warning{
  --tw-bg-opacity: 1;
  background-color: hsl(var(--wa) / 1);
  background-color: hsl(var(--wa) / var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-white{
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, 1);
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-yellow-500{
  --tw-bg-opacity: 1;
  background-color: rgba(234, 179, 8, 1);
  background-color: rgba(234, 179, 8, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-yellow-600{
  --tw-bg-opacity: 1;
  background-color: rgba(202, 138, 4, 1);
  background-color: rgba(202, 138, 4, var(--tw-bg-opacity, 1));
}
#simorgh-root .bg-opacity-0{
  --tw-bg-opacity: 0;
}
#simorgh-root .bg-opacity-10{
  --tw-bg-opacity: 0.1;
}
#simorgh-root .bg-opacity-15{
  --tw-bg-opacity: 0.15;
}
#simorgh-root .bg-opacity-20{
  --tw-bg-opacity: 0.2;
}
#simorgh-root .bg-opacity-30{
  --tw-bg-opacity: 0.3;
}
#simorgh-root .bg-opacity-40{
  --tw-bg-opacity: 0.4;
}
#simorgh-root .bg-opacity-50{
  --tw-bg-opacity: 0.5;
}
#simorgh-root .stroke-info{
  stroke: hsl(var(--in));
}
#simorgh-root .p-1{
  padding: 0.25rem;
}
#simorgh-root .p-2{
  padding: 0.5rem;
}
#simorgh-root .p-4{
  padding: 1rem;
}
#simorgh-root .p-6{
  padding: 1.5rem;
}
#simorgh-root .px-0{
  padding-left: 0px;
  padding-right: 0px;
}
#simorgh-root .px-2{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
#simorgh-root .px-3{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
#simorgh-root .px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}
#simorgh-root .px-6{
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
#simorgh-root .px-8{
  padding-left: 2rem;
  padding-right: 2rem;
}
#simorgh-root .py-1{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
#simorgh-root .py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
#simorgh-root .py-3{
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
#simorgh-root .py-4{
  padding-top: 1rem;
  padding-bottom: 1rem;
}
#simorgh-root .py-8{
  padding-top: 2rem;
  padding-bottom: 2rem;
}
#simorgh-root .pb-24{
  padding-bottom: 6rem;
}
#simorgh-root .pb-4{
  padding-bottom: 1rem;
}
#simorgh-root .pb-6{
  padding-bottom: 1.5rem;
}
#simorgh-root .pb-8{
  padding-bottom: 2rem;
}
#simorgh-root .pt-8{
  padding-top: 2rem;
}
#simorgh-root .text-left{
  text-align: left;
}
#simorgh-root .text-center{
  text-align: center;
}
#simorgh-root .text-2xl{
  font-size: 1.5rem;
  line-height: 2rem;
}
#simorgh-root .text-base{
  font-size: 1rem;
  line-height: 1.5rem;
}
#simorgh-root .text-lg{
  font-size: 1.125rem;
  line-height: 1.75rem;
}
#simorgh-root .text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}
#simorgh-root .text-xs{
  font-size: 0.75rem;
  line-height: 1rem;
}
#simorgh-root .font-bold{
  font-weight: 700;
}
#simorgh-root .font-light{
  font-weight: 300;
}
#simorgh-root .font-semibold{
  font-weight: 600;
}
#simorgh-root .text-\[\#0086C9\]{
  --tw-text-opacity: 1;
  color: rgba(0, 134, 201, 1);
  color: rgba(0, 134, 201, var(--tw-text-opacity, 1));
}
.text-base-content{
  --tw-text-opacity: 1;
  color: hsl(var(--bc) / 1);
  color: hsl(var(--bc) / var(--tw-text-opacity, 1));
}
#simorgh-root .text-blue-500{
  --tw-text-opacity: 1;
  color: rgba(59, 130, 246, 1);
  color: rgba(59, 130, 246, var(--tw-text-opacity, 1));
}
#simorgh-root .text-error{
  --tw-text-opacity: 1;
  color: hsl(var(--er) / 1);
  color: hsl(var(--er) / var(--tw-text-opacity, 1));
}
#simorgh-root .text-gray-300{
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, 1);
  color: rgba(209, 213, 219, var(--tw-text-opacity, 1));
}
#simorgh-root .text-gray-400{
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, 1);
  color: rgba(156, 163, 175, var(--tw-text-opacity, 1));
}
#simorgh-root .text-gray-500{
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, 1);
  color: rgba(107, 114, 128, var(--tw-text-opacity, 1));
}
#simorgh-root .text-gray-600{
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, 1);
  color: rgba(75, 85, 99, var(--tw-text-opacity, 1));
}
#simorgh-root .text-gray-800{
  --tw-text-opacity: 1;
  color: rgba(31, 41, 55, 1);
  color: rgba(31, 41, 55, var(--tw-text-opacity, 1));
}
#simorgh-root .text-green-500{
  --tw-text-opacity: 1;
  color: rgba(34, 197, 94, 1);
  color: rgba(34, 197, 94, var(--tw-text-opacity, 1));
}
#simorgh-root .text-info{
  --tw-text-opacity: 1;
  color: hsl(var(--in) / 1);
  color: hsl(var(--in) / var(--tw-text-opacity, 1));
}
#simorgh-root .text-primary{
  --tw-text-opacity: 1;
  color: hsl(var(--p) / 1);
  color: hsl(var(--p) / var(--tw-text-opacity, 1));
}
#simorgh-root .text-success{
  --tw-text-opacity: 1;
  color: hsl(var(--su) / 1);
  color: hsl(var(--su) / var(--tw-text-opacity, 1));
}
#simorgh-root .text-warning{
  --tw-text-opacity: 1;
  color: hsl(var(--wa) / 1);
  color: hsl(var(--wa) / var(--tw-text-opacity, 1));
}
#simorgh-root .text-white{
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, 1);
  color: rgba(255, 255, 255, var(--tw-text-opacity, 1));
}
#simorgh-root .text-yellow-500{
  --tw-text-opacity: 1;
  color: rgba(234, 179, 8, 1);
  color: rgba(234, 179, 8, var(--tw-text-opacity, 1));
}
#simorgh-root .text-opacity-90{
  --tw-text-opacity: 0.9;
}
#simorgh-root .opacity-30{
  opacity: 0.3;
}
#simorgh-root .opacity-40{
  opacity: 0.4;
}
#simorgh-root .opacity-50{
  opacity: 0.5;
}
#simorgh-root .opacity-80{
  opacity: 0.8;
}
#simorgh-root .shadow{
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
}
#simorgh-root .shadow-inner{
  --tw-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
}
#simorgh-root .shadow-lg{
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
}
#simorgh-root .shadow-md{
  --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
}
#simorgh-root .shadow-sm{
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
}
#simorgh-root .ring{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), 0 0 rgba(0,0,0,0);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 rgba(0,0,0,0));
}
#simorgh-root .filter{
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
#simorgh-root .transition-all{
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
#simorgh-root .duration-300{
  transition-duration: 300ms;
}
#simorgh-root .\[filter\:kolon\]{
  filter: kolon;
}

#simorgh-root,
#simorgh-root * {
  font-family: 'Lato', sans-serif;
}

#simorgh-root .Toastify__toast-container,
#simorgh-root .Toastify__toast-container .Toastify__toast {
  width: 400px !important;
}

#simorgh-root .hover\:bg-gray-200:hover{
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, 1);
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity, 1));
}

#simorgh-root .hover\:bg-transparent:hover{
  background-color: transparent;
}

#simorgh-root .hover\:bg-opacity-0:hover{
  --tw-bg-opacity: 0;
}

#simorgh-root .hover\:bg-opacity-60:hover{
  --tw-bg-opacity: 0.6;
}

#simorgh-root .active\:bg-opacity-0:active{
  --tw-bg-opacity: 0;
}

#simorgh-root .active\:bg-opacity-30:active{
  --tw-bg-opacity: 0.3;
}

#simorgh-root .active\:bg-opacity-90:active{
  --tw-bg-opacity: 0.9;
}

@media (min-width: 768px){

  #simorgh-root .md\:p-6{
    padding: 1.5rem;
  }

  #simorgh-root .md\:text-lg{
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
}


/*# sourceMappingURL=main.css.map*/